<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.repository.user.UserRepository">
    <!--로그인-->
    <select id="selectLogin" parameterType="Map" resultType="int">
        SELECT count(*) FROM user_tb WHERE u_id = #{u_id} AND u_pass = #{u_pass}
    </select>
    <!--로그인 시 이름 가져오기-->
    <select id="selectName" parameterType="String" resultType="String">
        SELECT u_name FROM user_tb WHERE u_id = #{u_id}
    </select>
    <!--로그인 시 비밀번호 변경 후 지난 기간 불러오기-->
    <select id="selectPwUdtDate" parameterType="Map" resultType="int">
        SELECT DATEDIFF(now(), u_pwudtdate) FROM user_tb WHERE u_id = #{u_id}
    </select>
    <!--로그인시 pk 가져오기-->
    <select id="selectPk" parameterType="String" resultType="int">
        SELECT user_pk FROM user_tb WHERE u_id = #{u_id}
    </select>

    <!--회원가입 아이디 중복 체크-->
    <select id="searchId" parameterType="String" resultType="int">
        SELECT count(*) FROM user_tb WHERE u_id = #{u_id}
    </select>
    <!--회원가입-->
    <insert id="insertUser" parameterType="User">
        INSERT INTO user_tb (u_id, u_pass, u_name, u_nick, u_phone, u_birth, u_gender, u_photo, u_pwudtdate, u_state)
        VALUES (#{u_id}, #{u_pass}, #{u_name}, #{u_nick}, #{u_phone}, #{u_birth}, #{u_gender}, "noimage.png", now(), 1)
    </insert>
    <!--비밀번호 변경할 때 아이디 참조해서 기존 비밀번호 가져오기(입력한 비밀번호와 일치하는 지 확인용)-->
    <select id="selectPass" parameterType="String" resultType="String">
        SELECT u_pass FROM user_tb WHERE u_id = #{u_id}
    </select>
    <!--비밀번호 변경-->
    <update id="updatePass" parameterType="Map">
        UPDATE user_tb SET u_pass = #{u_pass}, u_pwudtdate = now() WHERE u_id = #{u_id}
    </update>    <!-- 비밀번호 안바꿔도 날짜 업데이트 -->
    <update id="updatePassDate" parameterType="String">
        UPDATE user_tb SET u_pwudtdate = now() WHERE u_id = #{u_id}
    </update>
    <!--회원 삭제(상태 변경)-->
    <update id="deleteUser" parameterType="String">
        UPDATE user_tb SET u_state = 0 WHERE u_id = #{u_id}
    </update>
    <!--아이디 찾기-->
    <select id="selectFindId" parameterType="String" resultType="String">
        SELECT u_id FROM user_tb WHERE u_phone = #{u_phone}
    </select>
    <!--비밀번호 찾기 (아이디, 핸드폰 번호 확인)-->
    <select id="selectFindPass" parameterType="Map" resultType="int">
        SELECT count(*) FROM user_tb WHERE u_id = #{u_id} AND u_phone = #{u_phone}
    </select>

    <!--마이페이지 유저 정보 출력-->
    <select id="selectUser" parameterType="String" resultType="User">
        SELECT u_id, u_name, u_nick, u_phone, u_birth, u_gender, u_photo
        FROM user_tb WHERE user_pk = #{user_pk}
    </select>
    <!--마이페이지 회원 정보 수정-->
    <update id="updateUser" parameterType="User">
        UPDATE user_tb
        SET u_pass = #{u_pass}, u_name = #{u_name}, u_nick = #{u_nick}, u_phone = #{u_phone},
            u_photo = #{u_photo}, u_pwudtdate = now()
        WHERE user_pk = #{user_pk}
    </update>
    <!--마이페이지 예매 목록 조회-->
    <select id="selectBooking" parameterType="String" resultType="Map">
        SELECT
            p.pay_type AS paytype,
            p.pay_price AS price,
            b.booking_pk AS booknumber,
            b.book_the_name AS theater,
            b.book_issu_date AS issue,
            b.book_adult_cnt AS adult,
            b.book_youth_cnt AS youth,
            st.scrt_date AS date,
            st.scrt_stime AS begin,
            s.scr_name AS screen,
            m.m_name AS title,
            m.m_enname AS engtitle,
            m.m_age_grd AS grade,
            m.m_photo AS poster
        FROM
            user_tb u JOIN payment_tb p ON u.user_pk = p.user_pk
            JOIN booking_tb b ON p.payment_pk = b.payment_pk
            JOIN screentime_tb st ON b.scrtime_pk = st.scrtime_pk
            JOIN screen_tb s ON s.screen_pk = st.screen_pk
            JOIN movie_tb m ON st.movie_pk = m.movie_pk
        WHERE u.user_pk = #{user_pk} AND DATEDIFF(now(), b.book_issu_date) &lt; 30;
    </select>
    <!--마이페이지 무비로그 조회-->
    <select id="selectMovieLog" parameterType="String" resultType="Map">
        SELECT
            b.book_the_name AS theater,
            b.book_adult_cnt AS adult,
            b.book_youth_cnt AS youth,
            st.scrt_date AS date,
            st.scrt_stime AS begin,
            st.scrt_etime AS endtime,
            s.scr_name AS screen,
            m.m_name AS title,
            m.m_enname AS engtitle,
            m.m_age_grd AS grade,
            m.m_photo AS poster
        FROM
            user_tb u JOIN payment_tb p ON u.user_pk = p.user_pk
            JOIN booking_tb b ON p.payment_pk = b.payment_pk
            JOIN screentime_tb st ON b.scrtime_pk = st.scrtime_pk
            JOIN screen_tb s ON s.screen_pk = st.screen_pk
            JOIN movie_tb m ON st.movie_pk = m.movie_pk
        WHERE u.user_pk = #{user_pk};
    </select>
    <!--마이페이지 포인트 조회-->
    <select id="selectPoint" parameterType="String" resultType="int">
        SELECT u_point FROM user_tb WHERE user_pk = #{user_pk}
    </select>
    <!--마이페이지 포인트 적립/소멸 내역 조회-->
    <select id="selectPointDetail" parameterType="String" resultType="Map">
        SELECT p.po_point, p.po_plusminus, p.po_date, u.u_point
        FROM point_tb p JOIN user_tb u ON u.user_pk = p.user_pk
        WHERE u.user_pk = #{user_pk}
    </select>
</mapper>